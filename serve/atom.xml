<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Max Alcalá Sáinz]]></title>
  <link href="http://maxarturoas.com/atom.xml" rel="self"/>
  <link href="http://maxarturoas.com/"/>
  <updated>2014-12-02T09:33:18-06:00</updated>
  <id>http://maxarturoas.com/</id>
  <author>
    <name><![CDATA[Max Arturo Alcalá Sáinz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Top 1000 Stack Overflow Tags, Visualized]]></title>
    <link href="http://maxarturoas.com/blog/2014/07/11/top-1000-stack-overflow-tags-visualized/"/>
    <updated>2014-07-11T15:42:56-05:00</updated>
    <id>http://maxarturoas.com/blog/2014/07/11/top-1000-stack-overflow-tags-visualized</id>
    <content type="html"><![CDATA[<p><link rel="stylesheet" type="text/css" href="http://maxarturoas.com/stylesheets/dataViz/circleDiagram.css"></p>

<script src="http://d3js.org/d3.v3.min.js"></script>


<script type="text/javascript" src="http://maxarturoas.com/javascripts/dataViz/soTagBubbles.js"></script>


<h3>Drag, zoom in and out with your mouse/pinch for relative sizes:</h3>

<div id="tagBubbleChart"></div>


<p><a href="https://data.stackexchange.com/stackoverflow/query/207593/tag-totals-grouped-by-target-tag-synonyms">Source</a></p>

<p>I was very excited when I learned about Stack Exchange&rsquo;s public <a href="https://data.stackexchange.com/">Data Explorer</a> (how come nobody told me about this!!). It is really interesting to see the internal schema (which I assume is that same one used in production), as well as the popular queries to see how far away people are from getting a badge.</p>

<p>I wanted to see how popular different languages and frameworks were around the SO community, so I whipped up a query and set to work&hellip;</p>

<!-- more -->




<figure class='code'><figcaption><span>Stack Overflow Query</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="n">TagTotals</span><span class="p">.</span><span class="n">TagName</span><span class="p">,</span>
</span><span class='line'>  <span class="k">Sum</span><span class="p">(</span><span class="n">TagTotals</span><span class="p">.</span><span class="k">Count</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">FROM</span><span class="p">(</span>
</span><span class='line'>  <span class="k">SELECT</span>
</span><span class='line'>    <span class="n">TagSynonyms</span><span class="p">.</span><span class="n">TargetTagName</span> <span class="k">as</span> <span class="n">TagName</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Tags</span><span class="p">.</span><span class="k">Count</span>
</span><span class='line'>  <span class="k">FROM</span>
</span><span class='line'>    <span class="n">Tags</span>
</span><span class='line'>      <span class="k">INNER</span> <span class="k">JOIN</span>
</span><span class='line'>    <span class="n">TagSynonyms</span> <span class="k">ON</span> <span class="p">(</span>
</span><span class='line'>      <span class="n">Tags</span><span class="p">.</span><span class="n">TagName</span> <span class="o">=</span> <span class="n">TagSynonyms</span><span class="p">.</span><span class="n">SourceTagName</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">UNION</span> <span class="k">ALL</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">SELECT</span>
</span><span class='line'>    <span class="n">Tags</span><span class="p">.</span><span class="n">TagName</span><span class="p">,</span>
</span><span class='line'>    <span class="n">Tags</span><span class="p">.</span><span class="k">Count</span>
</span><span class='line'>  <span class="k">FROM</span>
</span><span class='line'>    <span class="n">Tags</span>
</span><span class='line'>      <span class="k">LEFT</span> <span class="k">JOIN</span>
</span><span class='line'>    <span class="n">TagSynonyms</span> <span class="k">ON</span> <span class="p">(</span>
</span><span class='line'>      <span class="n">Tags</span><span class="p">.</span><span class="n">TagName</span> <span class="o">=</span> <span class="n">TagSynonyms</span><span class="p">.</span><span class="n">SourceTagName</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>  <span class="k">WHERE</span>
</span><span class='line'>    <span class="n">TagSynonyms</span><span class="p">.</span><span class="n">SourceTagName</span> <span class="k">IS</span> <span class="k">NULL</span>
</span><span class='line'>  <span class="p">)</span> <span class="k">as</span> <span class="n">TagTotals</span>
</span><span class='line'>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">TagTotals</span><span class="p">.</span><span class="n">TagName</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>That gives you a listing of the number of times a tag has been used in a post. It rolls in tag synonyms, so you get a good idea of the tag groupings. Then I made a JSON out of it and loaded it through d3.layout.pack() to get radii and coordinates for the relative sizes of the bubbles. The text is also scaled through radii for good proportionality:</p>

<p><img src="http://maxarturoas.com/assets/images/tagCircles.jpg" title="'Tag Circles'" ></p>

<p>Hope you like it!</p>

<p><i>EDIT &ndash; Someone on Reddit spotted an oopsie in my SQL&hellip; now it&rsquo;s fixed. Thanks!</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[And Now for Some Data...]]></title>
    <link href="http://maxarturoas.com/blog/2014/07/06/and-now-for-some-data-dot-dot-dot/"/>
    <updated>2014-07-06T16:17:04-05:00</updated>
    <id>http://maxarturoas.com/blog/2014/07/06/and-now-for-some-data-dot-dot-dot</id>
    <content type="html"><![CDATA[<p><link rel="stylesheet" type="text/css" href="http://maxarturoas.com/stylesheets/dataViz/barchart.css"></p>

<p>  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script type="text/javascript" src="http://maxarturoas.com/javascripts/dataViz/mexAlcoholReport.js"></script></p>

<p>Finding curated, easy-to-consume data is easier now than ever. Just take a look at <a href="http://quandl.com">quandl</a> and similar projects &ndash; anything you could want is there! This makes things easier for doing inferences and linear regressions on crazy amounts on variables for whatever dataset you&rsquo;d want.</p>

<p>However, I always like looking for some more &lsquo;raw&rsquo;, exotic datasets for me to practice on. Now that I&rsquo;m starting to get a handle on <a href="http://d3js.org/">d3</a>, I&rsquo;ll start throwing in here some of my experiments and see what comes up.</p>

<p>Check this one out:</p>

<h2>Proportion of Alcohol-positive age ranges for roadside Alcohol Test in Hermosillo, Mexico for Dec 2013</h2>

<div id="chartMex"></div>


<p></p>

<!--more-->


<p><a href="http://datos.codeandomexico.org/sl/dataset/prueba-de-alcohol">source</a></p>

<p>This one was generated from the snapshot located in the <a href="http://datos.codeandomexico.org/sl/">Codeando Mexico</a> website. It&rsquo;s a grassroots website for coders to help make government and urban data accessible.</p>

<p>This is a big deal in Mexico, because there are still many local governments and entities that have very little in terms of making their operations and spending data open to the public. Though there has been a lot of progress lately and there is even a <a href="http://inicio.ifai.org.mx/_catalogs/masterpage/ifai.aspx">federal entity</a> devoted to transparency, this website was a welcome surprise.</p>

<p>The dataset is actually pretty rich, including:</p>

<ul>
<li>Age</li>
<li>Sex</li>
<li>Car type</li>
<li>Marital status</li>
<li>Seatbelt on/off</li>
<li>BAC</li>
</ul>


<p>Out of all these, I decided to focus on the age range. The positive status limited me to <strong>N = 199</strong> out of ~2100 entries. Not expecting a lot of surprises, I saw that the age bands actually were quite more centralized than expected, especially if you look at the <a href="http://www.inegi.org.mx/est/contenidos/Proyectos/registros/economicas/accidentes/default.aspx">national INEGI statistics</a> (yeah, you may need a translation for that&hellip;) Though the national statistics are from the victim standpoint for an alcohol-related incident, I was surprised to see that aglomeration in the center.</p>

<p>D3 made it super easy to lay out the elements and sync in the data. If you feel like you want in on how to make your own visualizations, I suggest to read Scott Murray&rsquo;s awesome <a href="http://chimera.labs.oreilly.com/books/1230000000345">Ebook</a> on the subject.</p>

<p>Until next time!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming Everyday as a Lifestyle]]></title>
    <link href="http://maxarturoas.com/blog/2014/06/23/programming-everyday/"/>
    <updated>2014-06-23T21:55:23-05:00</updated>
    <id>http://maxarturoas.com/blog/2014/06/23/programming-everyday</id>
    <content type="html"><![CDATA[<p>A while back, I referred a coworker back to my blog to show him some examples of d3.js, and noticed that it remained as abandoned as one&rsquo;s old n64 from college days. Pretty neat and waiting to be played with, but sadly colleting dust.</p>

<p>As anyone with an engaging job and a family can attest, sometimes getting around to your hobbies takes a back seat from other priorities. <!-- more --> Trying to develop your skills in a mentally challenging and detail-oriented hobby that sometimes requires hours on end of uninterrupted focus, however, is a much more difficult sell than, say, knitting (now that I think of it, I can see knitting taking up hours on end of uninterrupted focus&hellip;).</p>

<p>The reason that programming cannot be put into a &ldquo;hobby&rdquo; framework is that it doesn&rsquo;t work like a continuous time investment stream. One can&rsquo;t just do a little programming &ndash; that&rsquo;s what all CS professors wisely advise against. Often times, you can&rsquo;t just attempt to cram whatever knowledge you need to know in order to solve a problem. You can only Google so much before you realize you don&rsquo;t know what to look for, or find a weird implementation example that has nothing to do with your original intent. You need to have access to a couple (or perhaps more) layers of abstraction, readily at your fingertips &ndash; sometimes just to figure out what is wrong! And that additional knowledge comes at the expense of having solved similar subsets of the same problem over the course of time.</p>

<p>And that is just for straightforward, single-purpose programs. Learning entire frameworks and contributing to open-source projects involves a couple more layers of abstraction, namely <em>team collaboration</em> and <em>software architecture</em>. Now that&rsquo;s something that takes time&hellip;</p>

<p>Point being, anyone who seriously intends to become a somewhat proficient programmer, and who does not have the support network of being in a degree program, needs to treat the learning process as a <strong>lifestyle</strong>.</p>

<p>I&rsquo;m particularly invested in improving my programming skills because:</p>

<ul>
<li>It&rsquo;s fun</li>
<li>It helps me with my day job</li>
<li>It helps me bring better tools into what I do</li>
<li>It keeps me sharp mentally</li>
</ul>


<p>Whether I end up fully converting into a development career later on is yet to be seen, but it is a possibility to be certain. However, these reasons are strong enough for me to make any reasonable effort to invest the time and practice programming on a constant basis. How often? Why not daily?</p>

<p>When I first started working out, I was motivated by my coworkers who hit the gym 3x weekly. I remember thinking that it was a heavy rhythm and that I would fizzle out, but lo! I was able to stick it out, and now that they have moved or transferred, the regime sticks. The inertia of regular &ldquo;rituals&rdquo; is strong with the human brain, and I don&rsquo;t see why programming should be any different. I&rsquo;ve read up stories of <a href="http://blog.jenniferdewalt.com/">Jennifer Dewalt</a> and others who just &ldquo;pick it up&rdquo; and go for a lengthened boot camp, though there are also <a href="https://programmers.stackexchange.com/questions/48698/i-dont-program-in-my-spare-time-does-that-make-me-a-bad-developer">very good reasons</a> against overdoing yourself. It seems that the upper bound lies around &lt;=4 hours/day. Regardless of the frequency, having the drive to program constantly is a reflection of your actual pleasure in the craft. As someone on the last link worded more skillfully:</p>

<blockquote><p>Not programming in your spare time does not make you a bad developer, however, programming in your spare time can make you a better developer.</p></blockquote>

<p>And with that said, I&rsquo;m aiming for the lofty goal of programming daily. I will attempt a unitary exercise, probably from the trusty <a href="http://www.reddit.com/r/dailyprogrammer/">/r/dailyprogrammer</a> subreddit and vary it a bit. I&rsquo;ve already started since last week, and its fun! My first aim will be with Ruby. I felt it was neccesary, as I&rsquo;m using all this Jekyll mumbo-jumbo and running Ruby commands in the blind&hellip; Not proper.</p>

<p>You can find my exercises on the right in GitHub to keep me honest, or for your own use! I&rsquo;ve taken painstaking detail into recreating any prompts and useful links in markdown for your viewing pleasure. Let&rsquo;s see where this takes us!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geocoding With Python]]></title>
    <link href="http://maxarturoas.com/blog/2014/03/16/geocoding-with-python/"/>
    <updated>2014-03-16T21:02:45-05:00</updated>
    <id>http://maxarturoas.com/blog/2014/03/16/geocoding-with-python</id>
    <content type="html"><![CDATA[<p>My girlfriend had an interesting problem for me over the weekend. She has a pretty cool job (she will tell you its rather dull) doing primary-source research for an art/production firm, and she needed to start plotting some arbitrary locations into a map. She wasn&rsquo;t sure yet what program she&rsquo;d use to do this, but we arrived at the conclusion that having a list of lat/long&rsquo;s would help her no matter what program she ended up using.</p>

<p>For those like me that had no idea, <strong>Geocoding</strong> is the process of taking natural-language location descriptions and matching them to their corresponding latitude and longitude. <!-- more --> Google has an outstanding (and free!) API to get up to 2500 geocodings per day using its well-curated source of locations. The API usage is <a href="https://developers.google.com/maps/documentation/geocoding/">clearly documented</a>, as is tradition for Google, so it was a matter of quickly coding something up quick so that the GF could go on her merry way.</p>

<p>The script ought to be straightforward:</p>

<ol>
<li>read some input file</li>
<li>iterate over the list, calling the Google Maps API for each location and write the output to a file</li>
<li>Profit</li>
</ol>


<p>Though I am a VBS man at heart, I wanted to do something different. In the spirit of owning my own progress as a programmer I&rsquo;ve decided to not use VBS or any other language I&rsquo;m comfortable with going forward, which is very refreshing. Python&rsquo;s legendary breadth of modules to do <a href="https://www.python.org/doc/humor/#shooting-yourself-in-the-foot">pretty much anything</a> is well known, and having done some Django before pushed me to go with it.</p>

<p>What an amazing experience! Everything just <em>works</em>. In the process of writing up the script, I learned about setting up Virtualenv, generating the packaging install scripts, the top-notch <a href="http://docs.python-requests.org/en/latest/">requests module</a> and working wtih JSON to extract the data I needed. I really didn&rsquo;t think it would be this easy to interact with the different modules and goodies that Python includes by default. One part in specific that blew me away was the included <code>cmd</code> module to generate your very-own CLI for your program, just by <em>documenting your methods</em>. For example,</p>

<figure class='code'><figcaption><span>Self-building CLI</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>   <span class="k">def</span> <span class="nf">do_quit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">args</span><span class="p">):</span>
</span><span class='line'>      <span class="sd">&quot;&quot;&quot;Quits the program&quot;&quot;&quot;</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&quot;Quitting.&quot;</span>
</span><span class='line'>      <span class="k">raise</span> <span class="ne">SystemExit</span>
</span></code></pre></td></tr></table></div></figure>


<p>defines an argument within your CLI right after the method name <code>do_</code>. The help verbiage is the doc for the method, and the implemented superclass takes care of the looping.</p>

<p><em>Brilliant</em>.</p>

<p>No wonder everyone is going crazy about Python! I&rsquo;m very happy I ran into this just by having to make this rather simple script and it goes to show just how much more there is to learn. The script worked out and the GF was able to use it (granted I probably didn&rsquo;t need to add a CLI, but hey!!) and got brownie points for it. Not brownies, though. We&rsquo;re working on that.</p>

<p>If you&rsquo;re interested in the script it&rsquo;s <a href="https://github.com/maxArturo/gMapsGeoCoder/blob/master/geocoder.py">here</a>, as well as on my github account on the side of the page. There are some silly assumptions about quotes as I was taking in Excel-formatted CSV files and such, but you could probably modify it and make it inifinitely better if you wanted to. Yes, I know there are wrappers for Google&rsquo;s API but – that would take out the fun!</p>

<p><em>-Max</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jumpstarting Into Phile]]></title>
    <link href="http://maxarturoas.com/blog/2014/03/04/jumpstarting-into-phile/"/>
    <updated>2014-03-04T20:02:45-06:00</updated>
    <id>http://maxarturoas.com/blog/2014/03/04/jumpstarting-into-phile</id>
    <content type="html"><![CDATA[<p>Back in the day (slowly I feel more attributed to use that phrase), I messed with PHP and MySQL to produce a passable webpage, but alas – with the passage of time, the domain along with the content has been claimed by Oblivion. It seems that everyone is running amock these days with node.js and Django &ndash; where was my own shiny webpage?</p>

<h2>Enter <a href="https://github.com/PhileCMS/Phile">Phile</a>.</h2>

<!-- more -->


<p> It is a flat CMS &ndash; that means there is no database behind it (though I think there is a sqlite DB hidden somewhere, but I shall dive deeper). It uses a clever layout of PHP that enables you to create <code>.md</code> files and have them appear as content in your webpage. That&rsquo;s it &ndash; no messy uploading or indexing. You wouldn&rsquo;t even need a navigation page if you wanted, as the files are linked into your page automagically.</p>

<p>Phile is forked off of Pico CMS, the daddy behind the concept &ndash; but it seems to have enough quirks for people to move into an OO layout of the functions and resources and I must say, it is a pleasure to use.</p>

<p>Take me, for instance &ndash; I am mainly a VBscript guy in my day to day affairs. I am usually time-constrained so I like to be very careful what project I jump into. Knowing that I wanted to kick a site into life, I was about to go with one of the mainstream CMS&rsquo;s (cough, <em>django</em>), yet the flat-file philosophy really captured me. I used to be one of those guys in college that exclusively browsed the web with <a href="http://elinks.or.cz/">eLinks</a> and thoroughly enjoyed XFCE on a 486, so that would fall in line.</p>

<p>Within minutes (and within days of finding a quaint little hosting service that had <em>mod_rewrite</em> activated) I was up and running. It gently exposed me to Twig and rekindled the PHP interest in me, just so I can contribute back. Feel free to check out the GitHub repo, the <a href="http://philecms.github.io/Phile/">summary of features</a> and also James Doyle&rsquo;s shindig. He seems like a smart man.</p>

<p><em>-Max</em></p>

<p><em>&mdash;&mdash;EDITORS NOTE&mdash;&mdash;</em></p>

<p><em>You may see that this webpage is actually hosted in <a href="octopress.org">Octopress</a>, a Jekyll blogging implementation with lots of handy settings in SASS and yml configurations that I recommend you check out. In the effort of looking for the most &lsquo;static&rsquo; CMS system (if you can name Octopress one, it&rsquo;s more of an advanced HTML/CSS/JS rolling engine) I was won over by its advanced configuration settings and an introduction to Ruby at the same time. I still fully recomend Phile and encourage you to help James out if PHP is close to heart.</em></p>
]]></content>
  </entry>
  
</feed>
